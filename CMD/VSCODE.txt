**VS Code Python 常用開發快捷與實用功能整理**

---

### 基本快捷鍵

| 功能                    | 快捷鍵                                         |
| --------------------- | ------------------------------------------- |
| 執行目前 Python 檔         | `Ctrl + F5` 或 `Shift + Enter`（使用 Python 插件） |
| 格式化程式碼                | `Shift + Alt + F`                           |
| 自動補全提示                | `Ctrl + Space`                              |
| 顯示定義（Definition）      | `F12` 或 `Ctrl + Click`                      |
| 找到所有參考                | `Shift + F12`                               |
| 跳到符號                  | `Ctrl + Shift + O`                          |
| 命令面板（Command Palette） | `Ctrl + Shift + P`                          |

---

### Python 特化功能

| 功能             | 說明                                                               |
| -------------- | ---------------------------------------------------------------- |
| 選擇 Interpreter | `Ctrl + Shift + P` 輸入 `Python: Select Interpreter` 使用 conda/venv |
| 重載語言服務器        | `Python: Restart Language Server` 解決 import 變灰/白                 |
| 檢查使用沒有已定義函式    | `Pylance` 服務會用灰色顯示                                               |
| Linting        | 開啟 `pylint`/`flake8` 來嚴格校驗代碼                                     |
| 程式預測           | 可配合 `pytest`/自己寫 unittest 來跑測試                                   |

---

### Ὄ1 建議設定檔 (`settings.json`)

```json
{
  "python.languageServer": "Pylance",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "editor.formatOnSave": true,
  "files.exclude": {
    "__pycache__": true,
    ".vscode": false
  }
}
```

---

### 開發建議

* 建立 `.venv` 或使用 conda env 管理相依
* 常用套件建議:

  ```bash
  pip install pylint black autopep8 isort pytest
  ```
* 啟用成品管理符合 PEP8/正確 import 排序
